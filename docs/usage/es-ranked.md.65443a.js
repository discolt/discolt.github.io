(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1437:function(n,s){n.exports={content:["article",{},["h3","限制说明"],["ul",["li",["p","block 最多处理 1024 个文档。"]],["li",["p","top+pos 合计最多处理 1024 个文档。"]],["li",["p","被处理的文档将丧失原始分 _score。"]]]],meta:{category:"API扩展",order:9,title:{"zh-CN":"RankedQuery","en-US":"RankedQuery"},subtitle:"自定义排位",filename:"docs/usage/es-ranked.md"},description:["section",["p","RankedQuery 在原始查询上增加了一层结果集的自定义排位功能，通常用于 BadCase 的快速处理或垂搜场景的结果集处理。"],["blockquote",["p","利用 RankedQuery 搭配一个上层规则系统可以构建一个简单的排位系统。"]],["h2","使用样例"],["pre",{lang:"json",highlighted:'GET /_search\n<span class="token punctuation">{</span>\n    <span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">"ranked"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">"query"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n                ... 原始query\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token property">"rank"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token property">"top"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"_id1"</span><span class="token punctuation">,</span> <span class="token string">"_id2"</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token property">"block"</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">"_id3"</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token property">"pos"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span><span class="token property">"_id4"</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token property">"_id5"</span> <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">}</span> <span class="token punctuation">]</span> \n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code",'GET /_search\n{\n    "query": {\n        "ranked" : {\n            "query" : {\n                ... 原始query\n            },\n            "rank" : {\n                "top": [ "_id1", "_id2" ],\n                "block" : [ "_id3" ],\n                "pos": [ {"_id4" : 3}, {"_id5" : 8} ] \n            }\n        }\n    }\n}']],["h3","使用说明"],["p",["a",{title:null,href:"https://www.elastic.co/guide/en/elasticsearch/reference/6.6/mapping-id-field.html"},"_id"]," 为文档主键。"],["ul",["li",["p",["strong","block"]," 在结果集中排除某些文档。"]],["li",["p",["strong","top"]," 尽量将文档置顶。"]],["li",["p",["strong","pos"]," 精确指定文档排位，优先级高于 top。"]]]],toc:["ul"]}}}]);