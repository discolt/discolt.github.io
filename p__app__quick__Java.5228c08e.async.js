(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[26],{Ypo5:function(e,n,t){"use strict";t.r(n);t("+L6B");var r=t("2/Rp"),i=t("YivP"),a=t("q1tI"),s=t.n(a),c=(t("wA6N"),function(){window.history.back()}),l=function(e){return s.a.createElement("div",null,s.a.createElement("div",{className:"right_fbox"},s.a.createElement(r["a"],{onClick:c,type:"primary"},"\u8fd4 \u56de")),s.a.createElement(i["a"],{language:"java",code:o()}))},o=function(){return'\n\npublic class Example {\n\n    // \u8bc1\u4e66\u7528\u6237\u540d\n    String username = "xxx"; \n    // \u8bc1\u4e66\u5bc6\u7801\n    String password = "xxx";\n    // API\u7f51\u5173\u5730\u5740\n    String routerUrl = "xxx";\n    // API\u7f51\u5173\u7aef\u53e3\u53f7\n    int routerPort = 80;\n\n    // \u6784\u5efaES\u5ba2\u6237\u7aef\n    private RestHighLevelClient client() {\n        Header[] headers = new Header[]{new BasicHeader(HttpHeaders.CONTENT_TYPE, "application/json")};\n        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n        credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(username, password));\n        RestClientBuilder builder = RestClient.builder(new HttpHost(routerUrl, routerPort))\n                .setDefaultHeaders(headers)\n                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider));\n        return new RestHighLevelClient(builder);\n    }\n\n    // \u521b\u5efa\u7d22\u5f15\n    public void create() throws IOException {\n        CreateIndexRequest request = new CreateIndexRequest("greeting");\n        request.settings(Settings.builder());\n        Map mapping = Map.of("properties",\n                Map.of(\n                        "name", Map.of("type", "keyword"),\n                        "age", Map.of("type", "long")\n                )\n        );\n        request.mapping(mapping);\n        client().indices().create(request, RequestOptions.DEFAULT);\n    }\n\n    // \u5199\u5165\u7d22\u5f15\n    public void bulking() {\n        BulkRequest request = new BulkRequest();\n        for (int i = 0; i < 100; i++) {\n            request.add(new IndexRequest("greeting").type("_doc")\n                    .source(XContentType.JSON,\n                            "name", RandomStringUtils.random(6, "abcdefg"),\n                            "age", RandomUtils.nextInt()\n                    ));\n        }\n        try (RestHighLevelClient client = client();) {\n            client.bulk(request, RequestOptions.DEFAULT);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    // \u67e5\u8be2\n    public void search() {\n        try (RestHighLevelClient client = client()) {\n            SearchResponse response = client.search(new SearchRequest(), RequestOptions.DEFAULT);\n            System.out.println(response.getHits());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        Example example = new Example();\n        example.create();\n        example.bulking();\n        example.search();\n    }\n}\n\n-------------------------------\n\nmaven dependencies ...\n\n<dependency>\n  <groupId>org.apache.commons</groupId>\n  <artifactId>commons-lang3</artifactId>\n</dependency>\n<dependency>\n  <groupId>org.elasticsearch</groupId>\n  <artifactId>elasticsearch</artifactId>\n  <version>6.8.23</version>\n</dependency>\n<dependency>\n  <groupId>org.elasticsearch.client</groupId>\n  <artifactId>elasticsearch-rest-high-level-client</artifactId>\n  <version>6.8.23</version>\n</dependency>\n\n'};n["default"]=l},wA6N:function(e,n,t){}}]);